{"version":3,"sources":["firestore.js","index.js"],"names":["config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Main","firebase","apps","length","initializeApp","bidCompany","id","bids","db","collection","doc","update","biddingParty","state","currentUser","setState","funds","fundsRemaining","setAmount","result","toString","formatAmount","amount","slice","resetStats","a","get","forEach","ref","loginUser","e","console","log","preventDefault","email","document","getElementById","value","password","auth","signInWithEmailAndPassword","then","res","userDetails","data","user","this","catch","createUser","set","name","createUserWithEmailAndPassword","companies","changes","firestore","provider","GoogleAuthProvider","onAuthStateChanged","onSnapshot","snapshot","dataChange","docChanges","every","i","type","map","prevProps","prevState","updatedCompanies","change","Fragment","company","key","onClick","disabled","hidden","signOut","htmlFor","minLength","required","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.773d3351.chunk.js","sourcesContent":["const config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\nexport default config;\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport config from \"./firestore\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(config);\r\n    }\r\n    super();\r\n    this.state = {\r\n      companies: [],\r\n      changes: [],\r\n      currentUser: \"\",\r\n      funds: -1,\r\n    };\r\n    this.db = firebase.firestore();\r\n    this.auth = firebase.auth();\r\n    this.provider = new firebase.auth.GoogleAuthProvider();\r\n    this.auth.onAuthStateChanged(async (user) => {\r\n      if (user !== null) {\r\n        try {\r\n          const userDetails = await this.db\r\n            .collection(\"users\")\r\n            .doc(user.email)\r\n            .get();\r\n          this.setState({\r\n            currentUser: user.email,\r\n            funds: userDetails.data().fundsRemaining,\r\n          });\r\n        } catch (e) {\r\n          console.log(\r\n            \"some error happened when fetching existing user data\",\r\n            e\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection(\"companies\").onSnapshot((snapshot) => {\r\n      let dataChange = snapshot.docChanges();\r\n      if (dataChange.every((i) => i.type === \"added\")) {\r\n        this.setState({\r\n          companies: dataChange.map((i) => {\r\n            return {\r\n              id: i.doc.id,\r\n              ...i.doc.data(),\r\n              biddingParty: \"\", //REMOVE THIS LINE IN PROD, why?\r\n            };\r\n          }),\r\n        });\r\n      } else\r\n        this.setState({\r\n          changes: dataChange,\r\n        });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.changes.length !== 0) {\r\n      let updatedCompanies = this.state.companies;\r\n      this.state.changes.forEach((change) => {\r\n        updatedCompanies = updatedCompanies.map((i) => {\r\n          if (i.id === change.doc.id) {\r\n            return {\r\n              ...change.doc.data(),\r\n              id: change.doc.id,\r\n            };\r\n          } else return i;\r\n        });\r\n      });\r\n      this.setState({\r\n        companies: updatedCompanies,\r\n        changes: [],\r\n      });\r\n    }\r\n  }\r\n\r\n  bidCompany = (id, bids) => {\r\n    this.db\r\n      .collection(\"companies\")\r\n      .doc(id)\r\n      .update({\r\n        bids: bids + 1,\r\n        biddingParty: this.state.currentUser,\r\n      });\r\n\r\n    this.setState({\r\n      funds: 3000 - 900 - bids * 25,\r\n    });\r\n\r\n    this.db\r\n      .collection(\"users\")\r\n      .doc(this.state.currentUser)\r\n      .update({\r\n        fundsRemaining: 3000 - 900 - bids * 25,\r\n      });\r\n  };\r\n\r\n  setAmount = (bids) => {\r\n    const initAmount = 900;\r\n    const calculatedAmount = bids * 25;\r\n    const result = (initAmount + calculatedAmount).toString();\r\n    return this.formatAmount(result);\r\n  };\r\n\r\n  formatAmount = (amount) => {\r\n    amount = amount.toString();\r\n    return `â‚¹${amount.slice(0, -2)}${\r\n      amount.slice(-2) === \"00\" ? \"\" : \".\" + amount.slice(-2)\r\n    } Crores`;\r\n  };\r\n\r\n  resetStats = async () => {\r\n    const companiesToReset = await this.db.collection(\"companies\").get();\r\n    companiesToReset.forEach((doc) => {\r\n      doc.ref.update({\r\n        bids: 0,\r\n        biddingParty: \"\",\r\n      });\r\n    });\r\n  };\r\n\r\n  loginUser = async (e) => {\r\n    console.log(\"logged in user\");\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"pass\").value;\r\n    this.auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async (res) => {\r\n        try {\r\n          const userDetails = await this.db\r\n            .collection(\"users\")\r\n            .doc(email)\r\n            .get();\r\n          this.setState({\r\n            funds: userDetails.data().fundsRemaining,\r\n          });\r\n        } catch (e) {\r\n          console.log(\r\n            \"some error happened when fetching existing user data\",\r\n            e\r\n          );\r\n        }\r\n\r\n        this.setState({\r\n          currentUser: res.user.email,\r\n        });\r\n      })\r\n      .catch((res) => {\r\n        console.log(\"Error occured, user might not be in registry.\", res);\r\n        return;\r\n      });\r\n  };\r\n\r\n  createUser = async (e) => {\r\n    console.log(\"created user\");\r\n    e.preventDefault();\r\n    const email = document.getElementById(\"email\").value;\r\n    const password = document.getElementById(\"pass\").value;\r\n\r\n    this.db.collection(\"users\").doc(email).set({\r\n      name: email,\r\n      fundsRemaining: 3000,\r\n    });\r\n\r\n    this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async (res) => {\r\n        try {\r\n          const userDetails = await this.db\r\n            .collection(\"users\")\r\n            .doc(email)\r\n            .get();\r\n          this.setState({\r\n            funds: userDetails.data().fundsRemaining,\r\n          });\r\n        } catch (e) {\r\n          console.log(\r\n            \"some error happened when fetching existing user data\",\r\n            e\r\n          );\r\n        }\r\n\r\n        this.setState({\r\n          currentUser: res.user.email,\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul>\r\n          {this.state.companies.map((company) => (\r\n            <li key={company[\"id\"]}>\r\n              <strong>{company[\"companyName\"]}</strong>\r\n              <span>{\"    \"}</span>\r\n              <em>{this.setAmount(company[\"bids\"])}</em>\r\n              <span>{\"    \"}</span>\r\n              <span>\r\n                {company[\"biddingParty\"].length === 0\r\n                  ? \"No bids yet\"\r\n                  : company[\"biddingParty\"]}\r\n              </span>\r\n\r\n              <button\r\n                onClick={() => this.bidCompany(company[\"id\"], company[\"bids\"])}\r\n                disabled={!this.state.currentUser}\r\n              >\r\n                Bid\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div>\r\n          <button\r\n            hidden={this.state.currentUser}\r\n            onClick={(e) => {\r\n              this.loginUser(e);\r\n            }}\r\n          >\r\n            Sign in\r\n          </button>\r\n          <button\r\n            hidden={!this.state.currentUser}\r\n            onClick={() => {\r\n              this.auth.signOut();\r\n              this.setState({\r\n                currentUser: \"\",\r\n                funds: -1,\r\n              });\r\n            }}\r\n          >\r\n            SIGN OUT\r\n          </button>\r\n          <div>\r\n            <button\r\n              disabled={this.state.currentUser !== \"dev@cw.com\"}\r\n              onClick={() => this.resetStats()}\r\n            >\r\n              RESET <strong>DEV ONLY</strong>\r\n            </button>\r\n          </div>\r\n          <div>\r\n            <p>\r\n              {this.state.currentUser\r\n                ? `${this.state.currentUser}'s balance: ${this.formatAmount(\r\n                    this.state.funds\r\n                  )}`\r\n                : \"Login to bid\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <label hidden={this.state.currentUser} htmlFor=\"email\">\r\n          Email\r\n        </label>\r\n        <input\r\n          hidden={this.state.currentUser}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n\r\n        <label hidden={this.state.currentUser} htmlFor=\"pass\">\r\n          Password (8 characters minimum):\r\n        </label>\r\n        <input\r\n          hidden={this.state.currentUser}\r\n          type=\"password\"\r\n          id=\"pass\"\r\n          name=\"password\"\r\n          minLength=\"8\"\r\n          required\r\n        />\r\n        <button\r\n          hidden={this.state.currentUser}\r\n          onClick={(e) => this.createUser(e)}\r\n        >\r\n          CREATE ACCOUNT\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}